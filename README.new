# Context-Aware Quick Open

A VS Code extension that provides Emacs-style file navigation, starting searches from the current file's directory instead of the workspace root.

## 🎯 Why This Extension?

VS Code's default Quick Open (`Ctrl+P`) always searches from the workspace root, which can be frustrating when you know the general location of a file but not its exact name. This extension brings the intuitive file navigation experience from Emacs (`C-x C-f`) to VS Code.

## ✨ Features

- **Context-aware search**: Starts from the current file's directory
- **Hierarchical navigation**: Navigate through directories with arrow keys
- **Backspace navigation**: Go up one directory level with backspace
- **Fuzzy file matching**: Find files even with partial names
- **Dual-panel interface**: Browse current directory and search workspace simultaneously
- **Keyboard shortcuts**: Full keyboard navigation support

## 🚀 Usage

### Basic Navigation

1. **Open the extension**: `Ctrl+Shift+P` (or `Cmd+Shift+P` on Mac)
2. **Navigate directories**: Use arrow keys to move through files and folders
3. **Enter directories**: Press Enter on a folder to drill down
4. **Go up**: Press Backspace on empty input to go up one level
5. **Open files**: Press Enter on a file to open it

### Search Features

- **Fuzzy search**: Type partial file names to filter results
- **Path-based search**: Include folder names in your search
- **Case-insensitive**: Works regardless of capitalization

## 🛠️ Development

### Prerequisites

- Node.js >= 18.0.0
- Yarn 4.x
- VS Code

### Setup

1. **Install dependencies**:

   ```bash
   yarn install
   ```

2. **Build the extension**:

   ```bash
   yarn build
   ```

3. **Development mode**:

   ```bash
   yarn dev
   ```

4. **Package for distribution**:
   ```bash
   yarn package
   ```

### Project Structure

```
context-aware-quick-open/
├── src/
│   ├── extension.ts              # Main extension logic
│   └── dual-panel-extension.ts   # Dual panel interface
├── out/                          # Compiled JavaScript
├── package.json                  # Extension manifest
├── tsconfig.json                 # TypeScript configuration
└── README.md                     # This file
```

## 🎨 How It Works

### Simple QuickPick Interface

The extension uses VS Code's QuickPick API to create a file browser that:

- Shows files and directories in the current path
- Allows navigation with arrow keys
- Supports backspace to go up directories
- Provides fuzzy search filtering

### Dual Panel Interface

For more advanced usage, a webview-based interface provides:

- **Left panel**: Current directory browser
- **Right panel**: Workspace-wide search
- **Synchronized navigation**: Both panels work together

## 🔧 Configuration

### Keyboard Shortcuts

The default shortcut is `Ctrl+Shift+P`, but you can customize it in VS Code's keybindings:

```json
{
  "key": "ctrl+shift+p",
  "command": "contextAwareQuickOpen.open",
  "when": "!inQuickOpen"
}
```

### Settings

The extension respects VS Code's file exclusion settings:

- `files.exclude`: Files/folders to hide from search
- `search.exclude`: Files/folders to exclude from search

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch: `git checkout -b feature/amazing-feature`
3. Commit your changes: `git commit -m 'Add amazing feature'`
4. Push to the branch: `git push origin feature/amazing-feature`
5. Open a Pull Request

## 📝 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- Inspired by Emacs' intuitive file navigation (`C-x C-f`)
- Built with VS Code's Extension API
- Uses TypeScript for type safety and better development experience

## 🐛 Known Issues

- Currently in development
- Some advanced features may not work in all workspace configurations
- Performance may vary with very large directories

## 📈 Roadmap

- [ ] Add file type icons
- [ ] Implement workspace search in dual panel
- [ ] Add file preview functionality
- [ ] Support for multiple workspace folders
- [ ] Customizable search algorithms
- [ ] Integration with VS Code's file explorer

---

**Made with ❤️ for VS Code users who miss Emacs-style file navigation**
